Program Internal Form implemented on a singly linked list
Program Internal Form

let <-> (-1, -1)
identifier <-> (26, 0)
: <-> (-1, -1)
integer <-> (-1, -1)
, <-> (-1, -1)
identifier <-> (6, 0)
: <-> (-1, -1)
integer <-> (-1, -1)
, <-> (-1, -1)
identifier <-> (34, 0)
: <-> (-1, -1)
integer <-> (-1, -1)
; <-> (-1, -1)
write <-> (-1, -1)
( <-> (-1, -1)
constant <-> (18, 0)
) <-> (-1, -1)
; <-> (-1, -1)
read <-> (-1, -1)
( <-> (-1, -1)
identifier <-> (26, 0)
) <-> (-1, -1)
; <-> (-1, -1)
if <-> (-1, -1)
identifier <-> (26, 0)
< <-> (-1, -1)
constant <-> (3, 0)
or <-> (-1, -1)
identifier <-> (26, 0)
> <-> (-1, -1)
constant <-> (3, 0)
and <-> (-1, -1)
identifier <-> (26, 0)
% <-> (-1, -1)
constant <-> (3, 0)
is <-> (-1, -1)
constant <-> (1, 0)
then <-> (-1, -1)
begin <-> (-1, -1)
write <-> (-1, -1)
( <-> (-1, -1)
constant <-> (23, 0)
) <-> (-1, -1)
; <-> (-1, -1)
end <-> (-1, -1)
else <-> (-1, -1)
then <-> (-1, -1)
begin <-> (-1, -1)
identifier <-> (34, 0)
= <-> (-1, -1)
+ <-> (-1, -1)
constant <-> (2, 0)
- <-> (-1, -1)
constant <-> (2, 0)
; <-> (-1, -1)
for <-> (-1, -1)
identifier <-> (6, 0)
= <-> (-1, -1)
constant <-> (4, 0)
, <-> (-1, -1)
identifier <-> (6, 0)
* <-> (-1, -1)
identifier <-> (6, 0)
<= <-> (-1, -1)
identifier <-> (26, 0)
, <-> (-1, -1)
identifier <-> (6, 0)
+= <-> (-1, -1)
constant <-> (3, 0)
do <-> (-1, -1)
begin <-> (-1, -1)
if <-> (-1, -1)
identifier <-> (26, 0)
% <-> (-1, -1)
identifier <-> (6, 0)
is <-> (-1, -1)
constant <-> (1, 0)
then <-> (-1, -1)
begin <-> (-1, -1)
identifier <-> (34, 0)
= <-> (-1, -1)
constant <-> (1, 0)
; <-> (-1, -1)
end <-> (-1, -1)
end <-> (-1, -1)
if <-> (-1, -1)
identifier <-> (34, 0)
is <-> (-1, -1)
constant <-> (2, 0)
then <-> (-1, -1)
begin <-> (-1, -1)
write <-> (-1, -1)
( <-> (-1, -1)
constant <-> (30, 0)
) <-> (-1, -1)
; <-> (-1, -1)
end <-> (-1, -1)
else <-> (-1, -1)
then <-> (-1, -1)
begin <-> (-1, -1)
write <-> (-1, -1)
( <-> (-1, -1)
constant <-> (23, 0)
) <-> (-1, -1)
; <-> (-1, -1)
end <-> (-1, -1)
end <-> (-1, -1)
